/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 
struct cmp {
    bool operator () (ListNode* la, ListNode* lb) {
        return la->val > lb->val; //最小值优先, 小根堆
    }
};

class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if(lists.size() == 0)
            return NULL;
        int n = lists.size();
        priority_queue<ListNode*, vector<ListNode*>, cmp> pq;
        for(int i=0; i<n; i++) {
            if(lists[i] != NULL) 
                pq.push(lists[i]);
        }
        ListNode* temp = new ListNode(-1);//temp head for return;
        ListNode* m = temp;
        while(!pq.empty()) {
            ListNode* tmin = pq.top();
            pq.pop();
            m->next = tmin;
            m = m->next;
            if(tmin->next != NULL)
                pq.push(tmin->next);
        }
        return temp->next;
    }
};
