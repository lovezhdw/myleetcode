/*
 * refered by web
 * use the deque of STL to store the i of nums
 * Before push the current num, we need to pop all of the num which less it
 * we make sure that the numbers in the deque is descending and the front is biggest and must satified the distance of k. 
 */

class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int> ret;
        int n = nums.size();
        if(nums.size() < k || k == 0 || n ==0 )
            return ret;
        deque<int> deq;
        for(int i = 0; i<k; i++) {
            while(!deq.empty() && nums[i] > nums[deq.back()])
                deq.pop_back();
            deq.push_back(i);
        }
        for(int i=k; i<n; i++ ) {
            ret.push_back(nums[deq.front()]);
            while(!deq.empty() && nums[i] > nums[deq.back()])
                deq.pop_back();
            while(!deq.empty() && deq.front() <= i-k)
                deq.pop_front();
            deq.push_back(i);
        }
        ret.push_back(nums[deq.front()]);
        return ret;
    }
};
